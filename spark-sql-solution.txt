In this case study, we are giving a real-world example of how to use Spark-SQL on top of the HADOOP for different exploratory data analysis. In here, we have a predefined dataset (yellow_tripdata_2015-01-06.csv) having more than 15 columns. The dataset has different attributes like

vendor_id string,
pickup_datetime string,
dropoff_datetime string,
passenger_count int,
trip_distance DECIMAL(9,6),
pickup_longitude DECIMAL(9,6),
pickup_latitude DECIMAL(9,6),
rate_code int,
store_and_fwd_flag string,
dropoff_longitude DECIMAL(9,6),
dropoff_latitude DECIMAL(9,6),
payment_type string,
fare_amount DECIMAL(9,6),
extra DECIMAL(9,6),
mta_tax DECIMAL(9,6),
tip_amount DECIMAL(9,6),
tolls_amount DECIMAL(9,6),
total_amount DECIMAL(9,6),
trip_time_in_secs int
--------

Open spark by typing spark-shell

First, we have to create a dataframe by reading the CSV 

val df = spark.read
    .format("csv")
    .option("header","true")
    .option("inferSchema","true") 
    .option("mode","failfast")
    .load("<HDFS location of the csv file")

Now, we have to register this as a temperory table

df.createOrReplaceTempView("taxidata")


1. What is the total Number of trips ( equal to number of rows)?

Query: spark.sql("Select count(*) from taxidata").show

2. What is the total revenue generated by all the trips ? Fare is stored in the column
total_amount.

spark.sql("Select sum(total_amount) as total_revenue from taxidata").show


3. What fraction of the total is paid for tolls? Toll is stored in tolls_amount.

spark.sql("Select sum(tolls_amount)/sum(total_amount) as toll_pct from taxidata").show

4. What fraction of it is driver tips? Tip is stored in tip_amount.

spark.sql("Select sum(tip_amount)/sum(total_amount) as tip_pct from taxidata").show

5. What is the average trip amount?

spark.sql("Select avg(total_amount) as avg_tripamount from taxidata").show

6. For each payment type, display the following details
i. Average fare generated – fare amount is stored in fare_amount
ii. Average tip
iii. Average tax – tax is stored in column mta_tax

spark.sql("select payment_type,
avg(fare_amount) as average_fare,
avg(tip_amount) as average_tip,
avg(mta_tax) as average_tax,
from taxidata
group by payment_type")
.show


7. On an average which hour of the day generates the highest revenue?

spark.sql("select h24 as hour,
avg(total_amount) as avg_revenue
from (select trip_time as h24,
total_amount
from taxidata)
group by h24
order by avg_revenue desc").show



8. What is the average distance of the trips? Distance is stored in the column trip_distance.

spark.sql("select
avg(trip_distance) as avg_distance
from trips4").show

9. How many different payment types are used? Column name – payment_type.

spark.sql("select distinct payment_type from taxidata").show





